Data types:
	1)None types 
			an object that does not contain any value
	2)Numeric types
			int, float, complex, binary(0B), hexadecimal(0X), octal(0O)
			a=b+cj;
			d=0B1010;//10
			e=0XFF;//255
			f=0O70;//56
	3)boolean-->True/False
	4)Sequences
			str, bytes, bytearray,list, tuple, range
	5)Sets
	6)Mappings

Datatypes: 2 Types
	1.Fundamental Datatypes----------->Object holding a single value
		  5Types
		  1.int ----->age=25
		  2.float --->sal=90870.40
		  3.boolean-->True/False
		  4.string -->city="Hyderabad"
		  5.complex-->x+jy


	2.Collection Datatypes ----------->Object holding group of values
		4Types
		1.List  ------->[ ]  ex: x=[10,20,30,40]
		2.Tuple ------->( )      y=(10,20,30,40)
		3.Set   ------->{ }      z={10,20,30,40}
		4.Dictionary -->{k:v}    p={"Name":"Ajay" ,"Age":25}
		                              k       v


#There are 2 types of objects
"""
1.Immutable objects:Objects which doesnt allow to change or modify its  content
                    are called as immutable objects
ex: all fundamental datatypes and tuples



2.mutable objects:Objects which allow to change or modify its  content
                    are called as mutable objects
ex:list,set,dictionary
"""
#ex:
x=[10,20,30,40,50]
print(x)
x[1]=25
print(x)


	                           
	                              
Variables for Int
Example1 :
x=10
print(x)		#10
print(id(x))    #140705362746072
print(type(x))  #<class 'int'>                                                      


Example2:
#Defining 2 variables with same values->only one object created and its address is returned to both variables
x=10
y=10
print(x)		#10
print(y)		#10
print(id(x))    #140705362746072
print(id(y))    #140705362746072
print(type(x))  #<class 'int'>   
print(type(y))  #<class 'int'>   


Exapmle3:
#initializing multiple values to a variable---> multiple objects created--->always latest value will be returned.
x=10
print(id(x))    #140705362746072

x=20
print(x)		#20
print(id(x))	#140705362746392
print(type(x))	#<class 'int'>

x=10
print(x)		#10
print(id(x))	#140705362746072  (same as at start when value was 10 )
print(type(x))	#<class 'int'>


Garbage Collector
	Objects whose reference count become zero, 
	Reference Count
		No of variables pointing to an object
				or
		No of variables storing address of an object


Variable for float
# float datatype
x=4.5

print(x)
print(type(x))
print(id(x))

y=20
print(y)
print(id(y))
print(type(y))

z=x+y  #int+float------>float
print(z)
print(type(z))
print(id(z))



Data type conversion
All data types in python are object types and have a associated class
a=3.50
print(type(a)) #<class 'float'>
b=int(a)
print(type(b)) #<class 'int'>

i=float("22.0")
print(type(i)) #<class 'float'>

print(bin(10)) #0b1010
print(hex(255)) #0xFF


Identifier
	case sensitive
	can not start with a number
	can start with _  



Which type is used to represent mathematical algebraic expressions or equations?
	Complex
What does a single underscore at the beginning of a variable or function name typically signify in Python?
	convention for private variable or function









